/**
 * penguins-eggs: 
 * author: Piero Proietti
 * mail: piero.proietti@gmail.com
 *
 */

// packages
import fs from 'node:fs'
import shx from 'shelljs'
import mustache from 'mustache'

import Settings from './settings'

/**
 * Ovary:
 */
export default class I18n {
  verbose = false
  settings = {} as Settings

  constructor(verbose = false) {
    this.verbose = verbose
    this.settings = new Settings()
  }

  /**
   *
   * @param reinstall
   */
  generate(reinstall = false) {
    this.settings.load()

    this.verbose = true

    /**
     * apt-get purge locales --yes
     */
    console.log('remove package locales')
    shx.exec('apt-get purge locales --yes')

    /**
     * /etc/default/locale
     */
    if (this.verbose) {
      console.log('creating /etc/default.locale')
    }
    
    
    // sudo nano /etc/locale.gen (uncomment the one you want)
    // sudo locale-gen
    // sudo dpkg-reconfigure locales 
    // sudo update-locale LC_ALL=it_IT.UTF-8

    // const src = path.resolve(__dirname, `../../conf/distros/${this.settings.distro.codenameId}/locales/locale.template`)
    let lt = ''
    lt +='#  File generated by penguins-eggs\n'
    lt += '# This file lists locales that you wish to have built. You can find a list\n'
    lt += '# of valid supported locales at /usr/share/i18n/SUPPORTED, and you can add\n'
    lt += '# user defined locales to /usr/local/share/i18n/SUPPORTED. If you change\n'
    lt += '# this file, you need to rerun locale-gen.\n'
    lt += '# i comandi di mustache vanno comunque con due baffi\n'
    lt += '\n'
    lt += '{{#locales}}\n'
    lt += '{{{locale}}}\n'
    lt += '{{/locales}}\n'
    const dest = '/etc/default/locale'
    const view = {
      locale: this.settings.config.locales_default
    }
    fs.writeFileSync(dest, mustache.render(lt, view))

    /**
     * /etc/locale.gen
     */
    if (this.verbose) {
      console.log('creating /etc/locale.gen')
    }

    let lgt = ''
    lgt +='#  File generated by penguins-eggs\n'
    lgt +='LANG={{{locale}}}\n'
    lgt +='LC_ADDRESS={{{locale}}}\n'
    lgt +='LC_IDENTIFICATION={{{locale}}}\n'
    lgt +='LC_MEASUREMENT={{{locale}}}\n'
    lgt +='LC_MONETARY={{{locale}}}\n'
    lgt +='LC_NAME={{{locale}}}\n'
    lgt +='LC_NUMERIC={{{locale}}}\n'
    lgt +='LC_PAPER={{{locale}}}\n'
    lgt +='LC_TELEPHONE={{{locale}}}\n'
    lgt +='LC_TIME={{{locale}}}\n'

    const destLocales = '/etc/locale.gen'
    const viewLocales = { locales: [{}] }
    for (let i = 0; i < this.settings.config.locales.length; i++) {
      viewLocales.locales.push({ locale: this.settings.config.locales[i] + ' UTF-8' })
    }

    fs.writeFileSync(destLocales, mustache.render(lgt, viewLocales))

    if (reinstall) {
      /**
       * apt-get install locales --yes
       */
      console.log('reinstall package locales')
      shx.exec('apt-get reinstall locales --yes')

      // Eseguire localepurge file /etc/locale.nopurge

      // rimangono però i task task-italian, polish, etc che dipendono da task-sel
    } else {
      if (this.verbose) {
        console.log('executing locale-gen')
      }

      shx.exec('/usr/sbin/locale-gen')
    }

    /**
     * che fa bleachbit?
     *
     * elimina in /usr/share/i18n/locales/./sigla
     *
     * sotto /usr/share/i18n/locales abbiamo
     * SUPPORTED
     * charmaps
     * locales
     *
     * Quindi semplicemente, bleachbit rimuove
     * tutte le definizioni in
     * /usr/share/i18n/locales/ che non corrispondono ai
     * linguaggi selezionati
     *
     * Elimina 4,1kB /usr/share/i18n/locales/./ta_LK
     *
     * In più elimina
     *
     * limina 4,1kB /usr/share/man/es/man8/validlocale.8.gz
     * Elimina 4,1kB /usr/share/man/es/man8
     * Elimina 4,1kB /usr/share/man/es
     */
  }
}
